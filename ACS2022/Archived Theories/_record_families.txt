
---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[1,0])]])]
---------InComps are------

---------Violations are------

--------- Start repInsInc round: 1

--------Start unblocking 1 based on evidences  ------

-- Unresolvables and ProofCur is :
[-[families,[a],[c]]]
[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[1,0])]

--Deleting unprovable preconditions:
[-[families,[a],[c]]]

--Reformation: Unresolvables:
[-[families,[a],[c]]]

Reformation: targeted evidence
[families,[a],[c]]
--------Reformation Candidates------
[([+[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],(predicate,[[step]]),1,[],[([+[parent,[a],[c],[step]]],[],[],[+[parent,[a],[c],[step]]],[0,0])])]
---------------Axiom is 1  [+[parent,[a],[c],[step]]]
---------------Mismatches is 1  predicate,[[step]]
--Unblocking 1: RepPlanS:
[merge(parent,families,[[a],[c]],dec)]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[b],[birth]]]
[+[parent,[a],[c],[step]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]


--Unblocking 1: RepPlanS:
[expand([+[families,[a],[c]]])]
[+[families,[a],[c]]]


-- Unresolvables and ProofCur is :
[-[parent,[a],[c],[birth]]]
[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[1,0])]

--Deleting unprovable preconditions:
[-[parent,[a],[c],[birth]]]

--Reformation: Unresolvables:
[-[parent,[a],[c],[birth]]]

Reformation: targeted evidence
[parent,[a],[c],[birth]]
--------Reformation Candidates------
[([+[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[([c],[b])],1,[[],[([c],[b])],[]],[([+[parent,[a],[b],[birth]]],[],[],[+[parent,[a],[b],[birth]]],[0,0])]),([+[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[([birth],[step])],1,[[],[],[([birth],[step])]],[([+[parent,[a],[c],[step]]],[],[],[+[parent,[a],[c],[step]]],[0,0])])]
---------------Axiom is 1  [+[parent,[a],[b],[birth]]]
---------------Mismatches is 1  [([c],[b])]
--renameArgs: Mismatches:
[([c],[b])]
[-parent(\x,\y,step),-parent(\x,\y,birth),[arity(families)],[families]]

--renameArgs: Mismatches:
[([c],[b])]
[-parent(\x,\y,step),-parent(\x,\y,birth),[arity(families)],[families]]

--Unblocking 1: RepPlanS:
[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[b],[birth]]]
[+[parent,[a],[c],[step]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]


---------------Axiom is 1  [+[parent,[a],[c],[step]]]
---------------Mismatches is 1  [([birth],[step])]
--renameArgs: Mismatches:
[([birth],[step])]
[-parent(\x,\y,step),-parent(\x,\y,birth),[arity(families)],[families]]

--renameArgs: RepPlanS:
rename([([step],[birth],[+[parent,[a],[c],[step]]])])

--renameArgs: TargCls:
[[+[parent,[a],[c],[step]]]]

--Unblocking 1: RepPlanS:
[rename([([step],[birth],[+[parent,[a],[c],[step]]])])]
[+[parent,[a],[c],[step]]]


--renameArgs: Mismatches:
[([birth],[step])]
[-parent(\x,\y,step),-parent(\x,\y,birth),[arity(families)],[families]]

--extC2V: RepPlanS:
extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])

--extC2V: TargCls:
[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]

--Unblocking 1: RepPlanS:
[extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]


--Unblocking 1: RepPlanS:
[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[b],[birth]]]
[+[parent,[a],[c],[step]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]


--Unblocking 1: RepPlanS:
[expand([+[parent,[a],[c],[birth]]])]
[+[parent,[a],[c],[birth]]]


--------Start unblocking 2 by adding a rule ------

--Unblocking 2: RepPlanS/CLE
[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])]
[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]]
[+[parent,[a],[c],[step]]]


--Unblocking 2: RepPlanS/CLE
[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])]
[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]]
[+[parent,[a],[c],[step]]]


--------Start unblocking 3: by Analogical Abduction for ------
[-[families,[a],[c]]]

-- The single unresolvable subgoal. is :
[[-[families,[a],[c]]],[-[parent,[a],[c],[birth]]]]
-- The theorems of Predicate -parent-- are:
[([+[parent,[a],[b],[birth]]],[[([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([+[parent,[a],[c],[step]]],[[([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])]-- The theorems of Predicate -parent-- are:
[([+[parent,[a],[b],[birth]]],[[([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([+[parent,[a],[c],[step]]],[[([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])]
The scored relevant rule is 
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
1,1

The introduction preconditions are 
-[\=,[b],[c]]


The generalised rule RuleR6 is
[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]]

--------The incompatibilities of R6 include


--------The resulted rules of analogise RuleSR include
+[families,vble(z),vble(x)]
-[parent,vble(z),vble(y),[birth]]
-[\=,vble(y),vble(x)]

-------- getAdjCond for  Rule: [+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]]

 PreCands are: []

 Found unprovable precondition : add_pre(-[dummyPred,vble(x),vble(z)],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])

 All found unprovable preconditions: [add_pre(-[dummyPred,vble(x),vble(z)],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])]

--------The incompatibilities of R6 include


--------The resulted rules of analogise RuleSR include
+[families,vble(z),vble(x)]
-[\=,vble(y),vble(x)]
-[dummyPred,vble(x),vble(z)]
-[parent,vble(z),vble(y),[birth]]

The scored relevant rule is 
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
0,1

10repair plans  for buildP:[[-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[1,0])]]]


[insuff,([expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]]),[[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[parent,[a],[c],[step]]]]]
[insuff,([expand([+[families,[a],[c]]])],[[+[families,[a],[c]]]]),[[+[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]]
[insuff,([expand([+[parent,[a],[c],[birth]]])],[[+[parent,[a],[c],[birth]]]]),[[+[parent,[a],[c],[birth]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]]
[insuff,([extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]),[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]]
[insuff,([rename([([step],[birth],[+[parent,[a],[c],[step]]])])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]]
[insuff,([analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]])],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]]),[]]
[insuff,([analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]]),[[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[parent,[a],[b],[birth]]]]]
[insuff,([arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]]
[insuff,([arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]]
[insuff,([merge(parent,families,[[a],[c]],dec)],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]]


1 fault's new repair plans found: [[[insuff,([expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]]),[[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[parent,[a],[c],[step]]]]],[insuff,([expand([+[families,[a],[c]]])],[[+[families,[a],[c]]]]),[[+[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]],[insuff,([expand([+[parent,[a],[c],[birth]]])],[[+[parent,[a],[c],[birth]]]]),[[+[parent,[a],[c],[birth]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]],[insuff,([extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]),[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]],[insuff,([rename([([step],[birth],[+[parent,[a],[c],[step]]])])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]],[insuff,([analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]])],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]]),[]],[insuff,([analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]]),[[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[parent,[a],[b],[birth]]]]],[insuff,([arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]],[insuff,([arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]],[insuff,([merge(parent,families,[[a],[c]],dec)],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]]]]]


[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]]

All collections of repair plans are: 
[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])]
[expand([+[families,[a],[c]]])]
[expand([+[parent,[a],[c],[birth]]])]
[extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])]
[rename([([step],[birth],[+[parent,[a],[c],[step]]])])]
[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]])]
[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])]
[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])]
[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])]
[merge(parent,families,[[a],[c]],dec)]


-------- Start to apply repair plans:
expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])


******** RepPlan: expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
expand([+[families,[a],[c]]])


******** RepPlan: expand([+[families,[a],[c]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
expand([+[parent,[a],[c],[birth]]])


******** RepPlan: expand([+[parent,[a],[c],[birth]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])


******** RepPlan: extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
rename([([step],[birth],[+[parent,[a],[c],[step]]])])


******** RepPlan: rename([([step],[birth],[+[parent,[a],[c],[step]]])])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]])


******** RepPlan: analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])


******** RepPlan: analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])


-------- Start apply arityDec-------- 
arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])
******** Warning: verifyRep found orphans:arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])

[-[parent,vble(x),[birth]],-[parent,vble(x),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),[birth]]]
[+[parent,[a],[step]]]
[+[parent,[a],[birth]]]


-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])


-------- Start apply arityDec-------- 
arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])
******** RepPlan: arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
merge(parent,families,[[a],[c]],dec)


******** RepPlan: merge(parent,families,[[a],[c]],dec)

******** Warning: verifyRep found a loop rule:[[+[families,vble(x),vble(y)],-[families,vble(x),vble(y)]]]

-------- Finish applying repair plans.

-- There are 10 repaired states: 
[[[],[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[],[merge(parent,families,[[a],[c]],dec)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[families,[a],[c]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,[a],[c]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[rename([([step],[birth],[+[parent,[a],[c],[step]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[+[parent,[a],[b]]],[+[parent,[a],[c]]],[-[parent,vble(x),vble(y)],-[parent,vble(x),vble(y)]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]


-- RepStatesFine [[[[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[+[parent,[a],[c]]],[+[parent,[a],[b]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[rename([([step],[birth],[+[parent,[a],[c],[step]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[families,[a],[c]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]],[+[families,[a],[c]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[],[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]

---------Start detInsInc, Input theory is:------

[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[+[parent,[a],[c]]],[+[parent,[a],[b]]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]]
[+[parent,[a],[c]]]
[+[parent,[a],[b]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b]]],[0,0]),([-[parent,[a],[b]]],[+[parent,[a],[b]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c]]],[0,0]),([-[parent,[a],[c]]],[+[parent,[a],[c]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[[a]/vble(z),[b]/vble(y),[c]/vble(x)],[-[parent,[a],vble(y),[birth]],-[\=,vble(y),[c]]],[0,0]),([-[parent,[a],vble(y),[birth]],-[\=,vble(y),[c]]],[+[parent,[a],[b],[birth]]],[],[-[\=,[b],[c]]],[0,0]),([-[\=,[b],[c]]],unae,[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]],[[a]/vble(z),[c]/vble(x)],[-[\=,vble(y),[c]],-[dummyPred,[c],[a]],-[parent,[a],vble(y),[birth]]],[2,1])],[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[1,0])]])]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[[a]/vble(x),[b]/vble(y),[birth]/vble(z)],[-[parent,[a],[b],vble(z)]],[0,0]),([-[parent,[a],[b],vble(z)]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[[a]/vble(x),[c]/vble(y),[step]/vble(z)],[-[parent,[a],[c],vble(z)]],[0,0]),([-[parent,[a],[c],vble(z)]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------
[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],[birth]]],[],[-[parent,[a],[c],[step]]],[0,0]),([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]],[+[families,[a],[c]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[b],[birth]]]
[+[families,[a],[c]]]


---------SufGoals is------
[([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,[a],[c]]],[],[],[0,0])]])]
---------InsufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[],[],[-[families,[a],[b]]],[0,0])]])]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[[a]/vble(z),[c]/vble(y)],[-[parent,[a],[c],[step]]],[0,0]),([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[1,0])]])]
---------InComps are------

---------Violations are------

-- All faulty states: 9
0,0,[[[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[+[parent,[a],[c]]],[+[parent,[a],[b]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b]]],[0,0]),([-[parent,[a],[b]]],[+[parent,[a],[b]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c]]],[0,0]),([-[parent,[a],[c]]],[+[parent,[a],[c]]],[],[],[0,0])]])],[],[]
0,0,[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[[a]/vble(z),[b]/vble(y),[c]/vble(x)],[-[parent,[a],vble(y),[birth]],-[\=,vble(y),[c]]],[0,0]),([-[parent,[a],vble(y),[birth]],-[\=,vble(y),[c]]],[+[parent,[a],[b],[birth]]],[],[-[\=,[b],[c]]],[0,0]),([-[\=,[b],[c]]],unae,[],[],[0,0])]])],[],[]
1,0,[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]])],[([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]],[[a]/vble(z),[c]/vble(x)],[-[\=,vble(y),[c]],-[dummyPred,[c],[a]],-[parent,[a],vble(y),[birth]]],[2,1])],[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[1,0])]])],[]
0,0,[[[rename([([step],[birth],[+[parent,[a],[c],[step]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,0,[[[extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[[a]/vble(x),[b]/vble(y),[birth]/vble(z)],[-[parent,[a],[b],vble(z)]],[0,0]),([-[parent,[a],[b],vble(z)]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[[a]/vble(x),[c]/vble(y),[step]/vble(z)],[-[parent,[a],[c],vble(z)]],[0,0]),([-[parent,[a],[c],vble(z)]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])],[],[]
0,1,[[[expand([+[parent,[a],[c],[birth]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],[birth]]],[],[-[parent,[a],[c],[step]]],[0,0]),([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]]
1,0,[[[expand([+[families,[a],[c]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]],[+[families,[a],[c]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,[a],[c]]],[],[],[0,0])]])],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[],[],[-[families,[a],[b]]],[0,0])]])],[]
0,0,[[[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[[a]/vble(z),[c]/vble(y)],[-[parent,[a],[c],[step]]],[0,0]),([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])],[],[]
1,0,[[[],[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]])],[([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[1,0])]])],[]

An Optimal repaired theory with cost:1 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b]]],[0,0]),([-[parent,[a],[b]]],[+[parent,[a],[b]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c]]],[0,0]),([-[parent,[a],[c]]],[+[parent,[a],[c]]],[],[],[0,0])]])],[],[]
[[[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[+[parent,[a],[c]]],[+[parent,[a],[b]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:1 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[[a]/vble(z),[b]/vble(y),[c]/vble(x)],[-[parent,[a],vble(y),[birth]],-[\=,vble(y),[c]]],[0,0]),([-[parent,[a],vble(y),[birth]],-[\=,vble(y),[c]]],[+[parent,[a],[b],[birth]]],[],[-[\=,[b],[c]]],[0,0]),([-[\=,[b],[c]]],unae,[],[],[0,0])]])],[],[]
[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:1 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[rename([([step],[birth],[+[parent,[a],[c],[step]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:1 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[[a]/vble(x),[b]/vble(y),[birth]/vble(z)],[-[parent,[a],[b],vble(z)]],[0,0]),([-[parent,[a],[b],vble(z)]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[[a]/vble(x),[c]/vble(y),[step]/vble(z)],[-[parent,[a],[c],vble(z)]],[0,0]),([-[parent,[a],[c],vble(z)]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])],[],[]
[[[extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:1 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[[a]/vble(z),[c]/vble(y)],[-[parent,[a],[c],[step]]],[0,0]),([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])],[],[]
[[[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:1 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]])],[([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[1,0])]])],[]
[[[],[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
--The number of Optimals: 6
[[[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[+[parent,[a],[c]]],[+[parent,[a],[b]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b]]],[0,0]),([-[parent,[a],[b]]],[+[parent,[a],[b]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c]]],[0,0]),([-[parent,[a],[c]]],[+[parent,[a],[c]]],[],[],[0,0])]])],[],[]
[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[[a]/vble(z),[b]/vble(y),[c]/vble(x)],[-[parent,[a],vble(y),[birth]],-[\=,vble(y),[c]]],[0,0]),([-[parent,[a],vble(y),[birth]],-[\=,vble(y),[c]]],[+[parent,[a],[b],[birth]]],[],[-[\=,[b],[c]]],[0,0]),([-[\=,[b],[c]]],unae,[],[],[0,0])]])],[],[]
[[[rename([([step],[birth],[+[parent,[a],[c],[step]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[[a]/vble(x),[b]/vble(y),[birth]/vble(z)],[-[parent,[a],[b],vble(z)]],[0,0]),([-[parent,[a],[b],vble(z)]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[[a]/vble(x),[c]/vble(y),[step]/vble(z)],[-[parent,[a],[c],vble(z)]],[0,0]),([-[parent,[a],[c],vble(z)]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])],[],[]
[[[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[[a]/vble(z),[c]/vble(y)],[-[parent,[a],[c],[step]]],[0,0]),([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])],[],[]
[[[],[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]])],[([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[1,0])]])],[]

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b]]]],[(1,0),[+[parent,[a],[c]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(2,0),[+[parent,[a],[b],[birth]]]],[(0,0),[+[parent,[a],[c],[step]]]],[(1,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(1,0),[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(0,0),[+[parent,[a],[c],[step]]]],[(1,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[+[families,vble(z),vble(x)],-[\=,vble(y),vble(x)],-[dummyPred,vble(x),vble(z)],-[parent,vble(z),vble(y),[birth]]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 2,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[step]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(0,0),[+[parent,[a],[c],[step]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[families,[a],[c]]]],[(0,0),[+[parent,[a],[b],[birth]]]],[(0,0),[+[parent,[a],[c],[step]]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 1,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[step]]]],[(1,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(1,0),[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(0,0),[+[parent,[a],[c],[step]]]],[(1,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 2,0

--The number of Vitality Optimals: 6
[[[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[[a]/vble(z),[c]/vble(y)],[-[parent,[a],[c],[step]]],[0,0]),([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],[birth]]],[],[-[parent,[a],[c],[step]]],[0,0]),([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]]
[[[extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[[a]/vble(x),[b]/vble(y),[birth]/vble(z)],[-[parent,[a],[b],vble(z)]],[0,0]),([-[parent,[a],[b],vble(z)]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[[a]/vble(x),[c]/vble(y),[step]/vble(z)],[-[parent,[a],[c],vble(z)]],[0,0]),([-[parent,[a],[c],vble(z)]],[+[parent,[a],[c],[step]]],[],[],[0,0])]])],[],[]
[[[rename([([step],[birth],[+[parent,[a],[c],[step]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[[a]/vble(z),[b]/vble(y),[c]/vble(x)],[-[parent,[a],vble(y),[birth]],-[\=,vble(y),[c]]],[0,0]),([-[parent,[a],vble(y),[birth]],-[\=,vble(y),[c]]],[+[parent,[a],[b],[birth]]],[],[-[\=,[b],[c]]],[0,0]),([-[\=,[b],[c]]],unae,[],[],[0,0])]])],[],[]
[[[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[+[parent,[a],[c]]],[+[parent,[a],[b]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b]]],[0,0]),([-[parent,[a],[b]]],[+[parent,[a],[b]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c]]],[0,0]),([-[parent,[a],[c]]],[+[parent,[a],[c]]],[],[],[0,0])]])],[],[]

--The solution in 1 not in 2 include: 1

[[[],[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[2])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]])],[([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[1,0])]])],[]

--The solution in 2 not in 1 include: 1

[[[expand([+[parent,[a],[c],[birth]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],[birth]]],[],[-[parent,[a],[c],[step]]],[0,0]),([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]]

******** A solution is reached. *******

--------- Start repInsInc round: 2

-------- Start blockProof1: -------- 
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],[birth]]],[],[-[parent,[a],[c],[step]]],[0,0]
[-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0]

TheoryIn is: [[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]

[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]

Original Axiom is: [+[parent,[a],[c],[birth]]]

-------- start asser2rule to find unprovable precondition

-- SuffGoals=[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]

-- Theory=[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]


[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


Original Axiom is: [+[parent,[a],[c],[step]]]

-------- start asser2rule to find unprovable precondition

-- SuffGoals=[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]

-- Theory=[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]


[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]

-- The theorems of Predicate -parent-- are:
[([+[parent,[a],[b],[birth]]],[[([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([+[parent,[a],[c],[birth]]],[[([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
-------- Start blockProof2: reformation -------- 
-------- Proof is:
[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],[birth]]],[],[-[parent,[a],[c],[step]]],[0,0]),([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]


-------- SuffGoals is:
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]


--Blocking Repair Plan11 InpClause:
[+[parent,[a],[c],[birth]]]

arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])

9 repair plans for blockP:[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],[birth]]],[],[-[parent,[a],[c],[step]]],[0,0]),([-[parent,[a],[c],[step]]],[+[parent,[a],[c],[step]]],[],[],[0,0])]


[incomp,([delete([+[parent,[a],[c],[step]]])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]]
[incomp,([ass2rule([+[parent,[a],[c],[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]]
[incomp,([ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]]
[incomp,([ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]]
[incomp,([ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]]
[incomp,([weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]]
[incomp,([weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]]
[incomp,([arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[+[parent,[a],[c],[birth]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]]
[incomp,([arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]]


1 fault's new repair plans found: [[[incomp,([delete([+[parent,[a],[c],[step]]])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]],[incomp,([ass2rule([+[parent,[a],[c],[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]],[incomp,([ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]],[incomp,([ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]],[incomp,([ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]])],[[+[parent,[a],[c],[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]],[incomp,([weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]],[incomp,([weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]],[incomp,([arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[+[parent,[a],[c],[birth]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]],[incomp,([arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]]]]]]


[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]

All collections of repair plans are: 
[delete([+[parent,[a],[c],[step]]])]
[ass2rule([+[parent,[a],[c],[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]])]
[ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])]
[ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])]
[ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]])]
[weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])]


-------- Start to apply repair plans:
delete([+[parent,[a],[c],[step]]])


******** RepPlan: delete([+[parent,[a],[c],[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[parent,[a],[c],[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]])


******** RepPlan: ass2rule([+[parent,[a],[c],[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])


******** RepPlan: ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])


******** RepPlan: ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]])


******** RepPlan: ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


******** RepPlan: weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


******** RepPlan: weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


-------- Start apply arityInc-------- 
arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])
******** RepPlan: arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])


-------- Start apply arityInc-------- 
arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])
******** RepPlan: arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])

-------- Finish applying repair plans.

-- There are 9 repaired states: 
[[[expand([+[parent,[a],[c],[birth]]]),delete([+[parent,[a],[c],[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[c],[step]]],[-[parent,vble(x),[dummy_c_1],[birth]],-[parent,vble(x),[dummy_c_1],[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[c],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Abnormal1]]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]


-- RepStatesFine [[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[c],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Abnormal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_c_1],[birth]],-[parent,vble(x),[dummy_c_1],[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),delete([+[parent,[a],[c],[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]]
[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]
[+[parent,[a],[c],[step],[dummy_Normal1]]]
[+[parent,[a],[c],[birth],[dummy_Normal1]]]
[+[parent,[a],[b],[birth],[dummy_Normal1]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Abnormal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]]
[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]
[+[parent,[a],[c],[step],[dummy_Normal1]]]
[+[parent,[a],[c],[birth],[dummy_Abnormal1]]]
[+[parent,[a],[b],[birth],[dummy_Normal1]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Abnormal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Abnormal1]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),[dummy_c_1],[birth]],-[parent,vble(x),[dummy_c_1],[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),[dummy_c_1],[birth]],-[parent,vble(x),[dummy_c_1],[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[step]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[[birth]/vble(x)],[-[\=,[step],[birth]]],[0,0]),([-[\=,[step],[birth]]],unae,[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------
[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

-- All faulty states: 9
0,0,[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[c],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Abnormal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Abnormal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Abnormal1]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_c_1],[birth]],-[parent,vble(x),[dummy_c_1],[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,0,[[[ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[[birth]/vble(x)],[-[\=,[step],[birth]]],[0,0]),([-[\=,[step],[birth]]],unae,[],[],[0,0])]])],[],[]
0,1,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),delete([+[parent,[a],[c],[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]

An Optimal repaired theory with cost:1 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[[birth]/vble(x)],[-[\=,[step],[birth]]],[0,0]),([-[\=,[step],[birth]]],unae,[],[],[0,0])]])],[],[]
[[[ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
--The number of Optimals: 1
[[[ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[[birth]/vble(x)],[-[\=,[step],[birth]]],[0,0]),([-[\=,[step],[birth]]],unae,[],[],[0,0])]])],[],[]

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[(1,0),[+[parent,[a],[c],[birth],[dummy_Normal1]]]],[(0,0),[+[parent,[a],[c],[step],[dummy_Normal1]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]],[(0,0),[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[(1,0),[+[parent,[a],[c],[birth],[dummy_Abnormal1]]]],[(0,0),[+[parent,[a],[c],[step],[dummy_Normal1]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]],[(0,0),[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(0,0),[+[parent,[a],[c],[step]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[-[parent,vble(x),[dummy_c_1],[birth]],-[parent,vble(x),[dummy_c_1],[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(0,0),[+[parent,[a],[c],[step]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(1,0),[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

--The number of Vitality Optimals: 9
[[[expand([+[parent,[a],[c],[birth]]]),delete([+[parent,[a],[c],[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_c_1],[birth]],-[parent,vble(x),[dummy_c_1],[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[c],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Abnormal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Abnormal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Abnormal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[[birth]/vble(x)],[-[\=,[step],[birth]]],[0,0]),([-[\=,[step],[birth]]],unae,[],[],[0,0])]])],[],[]

--The solution in 1 not in 2 include: 0


--The solution in 2 not in 1 include: 8

[[[expand([+[parent,[a],[c],[birth]]]),delete([+[parent,[a],[c],[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_c_1],[birth]],-[parent,vble(x),[dummy_c_1],[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[c],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Abnormal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Abnormal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Abnormal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]

******** A solution is reached. *******

******** A solution is reached. *******

--------- Start repInsInc round: 3

-------- Start blockProof1: -------- 
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]
[-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]
[-[\=,[c],[b]]],unae,[],[],[0,0]

TheoryIn is: [[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]

[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]

Original Axiom is: [+[parent,[a],[b],[birth]]]

-------- start asser2rule to find unprovable precondition

-- SuffGoals=[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]

-- Theory=[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]


[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


Original Axiom is: [+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]

-------- getAdjCond for  Rule: [+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]

 PreCands are: [families]

-------- start to find unprovable precondition candidates based on: families
-- The theorems of Predicate -families-- are:
[([+[families,[a],[b]]],[[([-[parent,vble(x),vble(y),[birth]],+[families,vble(x),vble(y)]],[+[parent,[a],[b],[birth]]],[],[+[families,[a],[b]]],[0,0])]]),([+[families,[a],[c]]],[[([-[parent,vble(x),vble(y),[birth]],+[families,vble(x),vble(y)]],[+[parent,[a],[c],[birth]]],[],[+[families,[a],[c]]],[0,0])]])]
Found TSAll for: families
[[+[families,[a],[b]]],[+[families,[a],[c]]],[+[families,[a],[b]]],[+[families,[a],[c]]]]

 upArg ArgsV is 
[[a],[b]]

******** Warning: No adjustment precondition candidates found

 Found unprovable precondition : add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])

 All found unprovable preconditions: [add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])]

-------- Start blockProof2: reformation -------- 
-------- Proof is:
[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]


-------- SuffGoals is:
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]


--Blocking Repair Plan11 InpClause:
[+[parent,[a],[b],[birth]]]

arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])

--Blocking Repair Plan11 InpClause:
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]

arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])

9 repair plans for blockP:[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]


[incomp,([delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[+[parent,[a],[b],[birth]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]


1 fault's new repair plans found: [[[incomp,([delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[+[parent,[a],[b],[birth]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]]]


[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]

All collections of repair plans are: 
[delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])]
[add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])]
[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])]
[arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])]


-------- Start to apply repair plans:
delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])


******** RepPlan: delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])


******** RepPlan: add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


******** Finish renaming.

-------- Finish applying repair plans.

-------- Start to apply repair plans:
weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


******** RepPlan: weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


******** RepPlan: weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


-------- Start apply arityInc-------- 
arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])
******** RepPlan: arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


-------- Start apply arityInc-------- 
arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])
******** RepPlan: arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])


-------- Start apply arityInc-------- 
arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])
******** RepPlan: arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])


-------- Start apply arityInc-------- 
arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])
******** RepPlan: arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])

-------- Finish applying repair plans.

-- There are 9 repaired states: 
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv3)]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv5)]],[+[parent,[a],vble(x),[step],vble(iv4)],-[\=,[c],vble(x),vble(iv4)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv7)]],[+[parent,[a],vble(x),[step],vble(iv6)],-[\=,[c],vble(x),vble(iv6)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv8)]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]


-- RepStatesFine [[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]]
[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]
[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]
[+[parent,[a],[c],[birth],[dummy_Normal1]]]
[+[parent,[a],[b],[birth],[dummy_Normal1]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]]
[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]
[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]]
[+[parent,[a],[c],[birth],[dummy_Normal1]]]
[+[parent,[a],[b],[birth],[dummy_Normal1]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]]
[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]
[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]]
[+[parent,[a],[c],[birth],[dummy_Normal1]]]
[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Abnormal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]]
[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]
[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]
[+[parent,[a],[c],[birth],[dummy_Normal1]]]
[+[parent,[a],[b],[birth],[dummy_Normal1]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------
[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]

-- All faulty states: 9
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Abnormal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,1,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]]

An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Abnormal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
--The number of Optimals: 9
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Abnormal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]]

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[(1,0),[+[parent,[a],[c],[birth],[dummy_Normal1]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]],[(0,0),[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]]],[(0,0),[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[(1,0),[+[parent,[a],[c],[birth],[dummy_Normal1]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]]],[(0,0),[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]]],[(0,0),[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[(1,0),[+[parent,[a],[c],[birth],[dummy_Normal1]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]]],[(0,0),[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]]],[(0,0),[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[(1,0),[+[parent,[a],[c],[birth],[dummy_Normal1]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]],[(0,0),[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]],[(0,0),[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]],[(0,0),[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]],[(0,0),[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

--The number of Vitality Optimals: 9
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Abnormal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]

--The solution in 1 not in 2 include: 0


--The solution in 2 not in 1 include: 0


--------- Start repInsInc round: 4

-------- Start blockProof1: -------- 
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]
[-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]
[-[\=,[c],[b]]],unae,[],[],[0,0]

TheoryIn is: [[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]

[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]

Original Axiom is: [+[parent,[a],[b],[birth]]]

-------- start asser2rule to find unprovable precondition

-- SuffGoals=[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]

-- Theory=[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]


[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


Original Axiom is: [+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]

-------- getAdjCond for  Rule: [+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]

 PreCands are: [families]

-------- start to find unprovable precondition candidates based on: families
-- The theorems of Predicate -families-- are:
[([+[families,[a],[b]]],[[([-[parent,vble(x),vble(y),[birth]],+[families,vble(x),vble(y)]],[+[parent,[a],[b],[birth]]],[],[+[families,[a],[b]]],[0,0])]]),([+[families,[a],[c]]],[[([-[parent,vble(x),vble(y),[birth]],+[families,vble(x),vble(y)]],[+[parent,[a],[c],[birth]]],[],[+[families,[a],[c]]],[0,0])]])]
Found TSAll for: families
[[+[families,[a],[b]]],[+[families,[a],[c]]],[+[families,[a],[b]]],[+[families,[a],[c]]]]

 upArg ArgsV is 
[[a],[b]]

******** Warning: No adjustment precondition candidates found

 Found unprovable precondition : add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])

 All found unprovable preconditions: [add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])]

-------- Start blockProof2: reformation -------- 
-------- Proof is:
[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]


-------- SuffGoals is:
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]


--Blocking Repair Plan11 InpClause:
[+[parent,[a],[b],[birth]]]

arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])

--Blocking Repair Plan11 InpClause:
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]

arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

--Blocking Repair Plan11 InpClause:
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]

arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])

8 repair plans for blockP:[([-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[b],[birth]]],[],[-[parent,[a],[b],[step]]],[0,0]),([-[parent,[a],[b],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[[b]/vble(x)],[-[\=,[c],[b]]],[0,0]),([-[\=,[c],[b]]],unae,[],[],[0,0])]


[incomp,([delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[+[parent,[a],[b],[birth]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]
[incomp,([arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]


1 fault's new repair plans found: [[[incomp,([delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[[+[parent,[a],[b],[birth]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]],[incomp,([arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]),[[+[parent,[a],[b],[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]]]]]


[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]

All collections of repair plans are: 
[delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])]
[add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])]
[weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]
[arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])]
[arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])]


-------- Start to apply repair plans:
delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])


******** RepPlan: delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])


******** RepPlan: add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


******** RepPlan: weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


******** RepPlan: weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


-------- Start apply arityInc-------- 
arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])
******** RepPlan: arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])


-------- Start apply arityInc-------- 
arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])
******** RepPlan: arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])


-------- Start apply arityInc-------- 
arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])
******** RepPlan: arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])


-------- Start apply arityInc-------- 
arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])
******** RepPlan: arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])

-------- Finish applying repair plans.

-- There are 8 repaired states: 
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[parent,[a],[b],[birth]]],[+[parent,[a],[c],[birth]]],[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv9)]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv11)]],[+[parent,[a],vble(x),[step],vble(iv10)],-[\=,[c],vble(x),vble(iv10)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv13)]],[+[parent,[a],vble(x),[step],vble(iv12)],-[\=,[c],vble(x),vble(iv12)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv14)]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]


-- RepStatesFine [[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]]
[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]
[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]
[+[parent,[a],[c],[birth],[dummy_Normal1]]]
[+[parent,[a],[b],[birth],[dummy_Normal1]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]]
[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]
[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]]
[+[parent,[a],[c],[birth],[dummy_Normal1]]]
[+[parent,[a],[b],[birth],[dummy_Normal1]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]]
[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]
[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]]
[+[parent,[a],[c],[birth],[dummy_Normal1]]]
[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Abnormal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]]
[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]
[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]
[+[parent,[a],[c],[birth],[dummy_Normal1]]]
[+[parent,[a],[b],[birth],[dummy_Normal1]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]
[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]
[+[parent,[a],[c],[birth]]]
[+[parent,[a],[b],[birth]]]


---------SufGoals is------
[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

-- All faulty states: 8
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Abnormal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
0,0,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]

An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Abnormal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
An Optimal repaired theory with cost:3 and the fault state: [([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]
--The number of Optimals: 8
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Abnormal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[(1,0),[+[parent,[a],[c],[birth],[dummy_Normal1]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]],[(0,0),[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]]],[(0,0),[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[(1,0),[+[parent,[a],[c],[birth],[dummy_Normal1]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]]],[(0,0),[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]]],[(0,0),[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[(1,0),[+[parent,[a],[c],[birth],[dummy_Normal1]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]]],[(0,0),[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]]],[(0,0),[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[(1,0),[+[parent,[a],[c],[birth],[dummy_Normal1]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]]],[(0,0),[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]],[(0,0),[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]],[(0,0),[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]],[(0,0),[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

The vitality of the repaired theory is :[[(1,0),[+[parent,[a],[b],[birth]]]],[(1,0),[+[parent,[a],[c],[birth]]]],[(2,0),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]]],[(0,0),[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]]]]
 Vitality TotalScores are: 4,0

--The number of Vitality Optimals: 8
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[b]/vble(y)],[-[parent,[a],[b],[birth]]],[0,0]),([-[parent,[a],[b],[birth]]],[+[parent,[a],[b],[birth]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[[a]/vble(x),[c]/vble(y)],[-[parent,[a],[c],[birth]]],[0,0]),([-[parent,[a],[c],[birth]]],[+[parent,[a],[c],[birth]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Abnormal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[b],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv2)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv2)],[-[parent,[a],[c],[birth],vble(iv2)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]
[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]],[([-[families,[a],[b]]],[[([-[families,[a],[b]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[b]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[b],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[b],[birth],vble(iv1)]],[+[parent,[a],[b],[birth],[dummy_Normal1]]],[],[],[0,0])]]),([-[families,[a],[c]]],[[([-[families,[a],[c]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[[a]/vble(x),[c]/vble(y),[dummy_Normal1]/vble(iv1)],[-[parent,[a],[c],[birth],vble(iv1)]],[0,0]),([-[parent,[a],[c],[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[],[],[0,0])]])],[],[]

--The solution in 1 not in 2 include: 0


--The solution in 2 not in 1 include: 0


******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

29 AllRepTheos2 is:------
1,[fault-free,1/1,[[[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
2,[fault-free,2/2,[[[expand([+[parent,[a],[c],[birth]]]),delete([+[parent,[a],[c],[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
2,[fault-free,2/2,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,vble(x),[c],[step]],-[families,[a],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,4/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,4/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,4/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,4/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,4/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,4/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,4/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,4/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4),rename([b],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,3/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),delete([+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,3/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),add_pre(-[dummyPred,vble(x)],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)],-[dummyPred,vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,3/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,3/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),weaken(vble(y),[dummy_b_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_b_1],[birth]],-[parent,vble(x),[dummy_b_1],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,3/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]],-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],[dummy_Abnormal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,3/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[b],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Abnormal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,3/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[b],[birth]],[+[parent,[a],[b],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],vble(iv1)],-[\=,[c],vble(x),vble(iv1)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv2)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
3,[fault-free,3/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]]),arityInc(parent,-[parent,[a],[b],[step]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],vble(x),[step]],[+[parent,[a],vble(x),[step]],-[\=,[c],vble(x)]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[parent,[a],vble(x),[step],[dummy_Normal1]],-[\=,[c],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
2,[fault-free,2/4,[[[expand([+[parent,[a],[c],[birth]]]),ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[families,[a],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
2,[fault-free,2/4,[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(x),[dummy_a_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,[dummy_a_1],vble(y),[birth]],-[parent,[dummy_a_1],vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
2,[fault-free,2/4,[[[expand([+[parent,[a],[c],[birth]]]),weaken(vble(y),[dummy_c_1],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),[dummy_c_1],[birth]],-[parent,vble(x),[dummy_c_1],[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
2,[fault-free,2/4,[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]],-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]])],[delete([+[parent,[a],[c],[birth],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Normal1]],-[parent,vble(x),vble(y),[step],[dummy_Normal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Abnormal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
2,[fault-free,2/4,[[[expand([+[parent,[a],[c],[birth]]]),arityInc(parent,-[parent,vble(x),vble(y),[birth]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],+[parent,[a],[c],[birth]],[+[parent,[a],[c],[birth]]])],[delete([-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]]),deleArg(parent,4)]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth],[dummy_Abnormal1]],-[parent,vble(x),vble(y),[step],[dummy_Abnormal1]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth],vble(iv1)]],[+[parent,[a],[c],[step],[dummy_Normal1]]],[+[parent,[a],[c],[birth],[dummy_Normal1]]],[+[parent,[a],[b],[birth],[dummy_Normal1]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
1,[fault-free,2/4,[[[ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
1,[fault-free,1/4,[[[extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
1,[fault-free,1/4,[[[rename([([step],[birth],[+[parent,[a],[c],[step]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
1,[fault-free,1/4,[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
1,[fault-free,1/4,[[[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[+[parent,[a],[c]]],[+[parent,[a],[b]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]


 MiniCost is:------
1

--------------AllRepStates: [fault-free,1/1,[[[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
[fault-free,1/4,[[[extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
[fault-free,1/4,[[[rename([([step],[birth],[+[parent,[a],[c],[step]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
[fault-free,1/4,[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
[fault-free,1/4,[[[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[+[parent,[a],[c]]],[+[parent,[a],[b]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
[fault-free,2/4,[[[ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]


--------------executation time 2---
time takes
64

------------- AllRepStates -------------
[fault-free,1/1,[[[expand([+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
[fault-free,1/4,[[[extC2V([([birth],vble(z),[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
[fault-free,1/4,[[[rename([([step],[birth],[+[parent,[a],[c],[step]]])])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
[fault-free,1/4,[[[analogy([+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
[fault-free,1/4,[[[arityDec(parent,[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]],[3])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[+[parent,[a],[c]]],[+[parent,[a],[b]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]
[fault-free,2/4,[[[ass2rule([+[parent,[a],[c],[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]])],[]],[[[a]],[[b]],[[birth]],[[c]],[[step]]],[],[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]]],[[+[families,[a],[b]]],[+[families,[a],[c]]]],[]]]




------------- TASS -------------
FullyNumRaw is: 6
FullyNum is: 6


[[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y)]],[+[parent,[a],[c]]],[+[parent,[a],[b]]]]
[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),vble(z)]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]]
[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[birth]]],[+[parent,[a],[b],[birth]]]]
[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(x)],-[parent,vble(z),vble(y),[birth]],-[\=,vble(y),vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]]
[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[families,vble(z),vble(y)],-[parent,vble(z),vble(y),[step]]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[c],[step]]],[+[parent,[a],[b],[birth]]]]
[[-[parent,vble(x),vble(y),[birth]],-[parent,vble(x),vble(y),[step]]],[+[parent,[a],[c],vble(x)],-[\=,[step],vble(x)]],[+[families,vble(x),vble(y)],-[parent,vble(x),vble(y),[birth]]],[+[parent,[a],[b],[birth]]]]



------------- TBSS -------------
SemiNumRaw is: 0
SemiNum is: 0





